[{"content":"Gladwell once proposed his famous 10,000-Hour Rule in his book, which means that \u0026lsquo;Genius is not a natural talent but a continuous effort, and it takes 10,000 hours at least to go from ordinary to extraordinary.\u0026rsquo;\nAs a Chinese student who studies 12 hours a day, six days a week on average, twelve years of dedication has far exceeded the requirements of the 10,000-hour law, and it is reasonable to say that we should all be master learners. But things turn out contrary the way one wishes, the \u0026lsquo;nightmare\u0026rsquo; of study efficiency continued to hinder my progress. Fortunately, through the Coursra course \u0026ldquo;Learn How to Learn\u0026rdquo;, I realized the importance of scientific study techniques. This article shows how new approaches to learn helped me become more effective.\n Similarly, I hope you can learn useful study skills after reading this blog.\n Set a Goal, Make a Plan and Gather Infomation I decided to spend a few days to verify that the techniques learned in the course were effective in improving my learning. I focused on finding a newer area to reduce the distraction of existing knowledge while not being too rusty for me that it would consume too much time and effort.\nAfter half a day of thinking and preparation, I decided to implement a minimal Lisp Interpreter in 3 days.\nPlan First During the course, Professor Barbara Oakley repeatedly mentions the importance of planning and recommends making a plan for the next day before going to bed each day to increase efficiency.\nSo I decided to create an introductory plan to distribute the tasks for the three days in general, and to create a detailed plan based on the tasks to be completed on that day.\nMy plan is roughly divided into three parts, learning theory, technical implementation, and sharing success.\nAfter meticulous preparation, I started.\n Likewise, this article will cover some computer concepts that are very new for most people, and I\u0026rsquo;m trying to explain them to check if I really understand the knowledge. But I\u0026rsquo;ll mainly talking about learn techniques instead of computer science or something. If you\u0026rsquo;re interested in details about this project, you can view its source code on github: lisp-interpreter\n A Powerful Tool to Assist Understanding —— Analogy Writing an interpreter for a high-level programming language is a highly abstract task in which many concepts are difficult to transfer from real life or other subjects directly.\nFor example, the lisp use prefix expressions(a.k.a. Polish notation) for arithmatic:\n normal (a.k.a Infix notation)  $$ 9 + 7 \\times (3 - 5) + 2 $$\n prefix notation  $$ + + 9 \\times 7 - 3\\,5\\,2 $$\nand in LISP, it should be\n1  (+ (+ 9 (* 7 (- 3 5))) 2)   Letting the computer compute such expressions requires the use of a data structure called stack.\nThe description of the stack is very abstract and obscure on textbook. It is defined only by the some jargons like \u0026lsquo;operationally constrained linear tables\u0026rsquo;. Too bad!\nBut after a few deduction, I realized that this thing called \u0026ldquo;stack\u0026rdquo; is really similar to badminton tube in fact.\nA stack is a special liner table. Liner means no parallel elements, it\u0026rsquo;s like not being able to put two balls side by side in a tube. And \u0026lsquo;Limit insert and delete operations only at the end of the table\u0026rsquo; can be simply considered that one can only put the ball and take the ball from one end of the tube. (Of course, I assume that you don’t damage the tube. 👀)\nSo, understanding the concept FILO （ first in last out ） of stack couldn\u0026rsquo;t be simpler!\n FILO: The element inserted at first in the list, is the last element to be removed from the list\n $$ \\Downarrow $$\n The ball put in at first in the tube is the last to be took out\n And proper nouns like push and pop can be easily replaced with put in and take out.\nOf course this is only one of many concepts to understand, and I can say that learning by analogy has greatly improved my efficiency and helped me to form chunk\nAn Excellent Solution for Procrastination —— Pomodoro After accumulating a certain amount of knowledge, I started the process of plan-product transformation. This process is more mechanical than learning and sharing, so I need to make sure I\u0026rsquo;m in constant focus mode. During this time, I turn off the phone\u0026rsquo;s notification sound, turn on the editor\u0026rsquo;s Zen mode (One way to isolate notification interference) and put on noise-cancelling headphones —— this process will last for forty minutes.\n Why 40 minutes instead of 20 minutes? At first I also tried to take 20 minutes as a cycle, but in practice, I can not write a complete block of code in just 20 minutes, and after interrupting I felt difficult to re-engage, furthermore 40 minutes of coding is a piece of cake for me 😉\n Relax Makes Perfect","permalink":"https://blog.lenva.tech/posts/a-learning-odyssey/","summary":"\u003cp\u003eGladwell once proposed his famous \u003ca href=\"https://en.wikipedia.org/wiki/Outliers_(book)#Reception\"\u003e\u003cem\u003e10,000-Hour Rule\u003c/em\u003e\u003c/a\u003e  in his book, which means that \u0026lsquo;Genius is not a natural talent but a continuous effort, and it takes 10,000 hours at least to go from ordinary to extraordinary.\u0026rsquo;\u003c/p\u003e","title":"A Simple Example Shows How to Learn"},{"content":"   friend site     Sakurai Kaede\u0026rsquo;s Blog sakurai.in   某岛 shuizilong.com   moi的一般通过小站 rain.moimo.me   CANARYPWN\u0026rsquo;S NATïVE BLOG aaaab3n.moe   Labelray\u0026rsquo;s Blog blog.labelray.top   Kevin\u0026rsquo;s Blog blog.kevinfly.com   Raptazure raptazure.github.io   银河美术馆 beautyyu.one   红茶馆 onlyblacktea.cn   RAY ELDATH han.ninja   Lovely\u0026rsquo;s Blog blog.dmcmi.top   明心 subrige.xyz   VOY青年之声 gmdlvoy.blogspot.com   ムえ blog.murez.site   Oliver\u0026rsquo;s Blog manito.fun   辇道增七的小站 wuhaoda.life   Broca的个人博客 phenol-phthalein.info   ZHANGWP\u0026rsquo;s Blog www.zhangwp.com   巽星莊 shviolet.tk    ","permalink":"https://blog.lenva.tech/links/","summary":"friend site     Sakurai Kaede\u0026rsquo;s Blog sakurai.in   某岛 shuizilong.com   moi的一般通过小站 rain.moimo.me   CANARYPWN\u0026rsquo;S NATïVE BLOG aaaab3n.moe   Labelray\u0026rsquo;s Blog blog.labelray.top   Kevin\u0026rsquo;s Blog blog.kevinfly.com   Raptazure raptazure.github.io   银河美术馆 beautyyu.one   红茶馆 onlyblacktea.cn   RAY ELDATH han.ninja   Lovely\u0026rsquo;s Blog blog.dmcmi.top   明心 subrige.xyz   VOY青年之声 gmdlvoy.blogspot.com   ムえ blog.","title":"links"},{"content":"","permalink":"https://blog.lenva.tech/tags/","summary":"","title":"Tags"}]