I"ê<p>These days, I accepted some easy problems on leetcode, in order to get familiar to a new programming language‚Äî‚Äî<code class="language-plaintext highlighter-rouge">Swift</code>. In this series, I will write down basic syntax and come useful skills. Mostly, it‚Äôs my personal online note.</p>

<!--more-->

<h2 id="print">print()</h2>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// hello_world.swift</span>
  <span class="nf">print</span><span class="p">(</span><span class="s">"hello, world!"</span><span class="p">)</span>
</code></pre></div></div>

<p>The code above will print <code class="language-plaintext highlighter-rouge">"hello, world!\n"</code>, and it‚Äôs a <strong>complete</strong> program. I can run it in command line by tapping <code class="language-plaintext highlighter-rouge">swift hello_world.swift</code>. It‚Äôs obviously that this language has some feature of script language.</p>

<p>We can add a parameter to change the last character of the string, and by doing this, the <code class="language-plaintext highlighter-rouge">print</code> will not wrap:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c1">// hello_world_unwrap.swift</span>
  <span class="nf">print</span><span class="p">(</span><span class="s">"hello, world!"</span><span class="p">,</span> <span class="nv">terminator</span><span class="p">:</span> <span class="s">""</span><span class="p">)</span>
</code></pre></div></div>

<p>And another parameter <code class="language-plaintext highlighter-rouge">separator:</code> is also important. You can use it like <code class="language-plaintext highlighter-rouge">terminator:</code></p>

<h2 id="comments">Comments</h2>

<p>Swift‚Äôs comments are C++ like. For example:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// luv üçü</span>
<span class="cm">/* luv üì¶*/</span>
</code></pre></div></div>

<p>It‚Äôs no need to explain more.</p>

<h2 id="values-variables-and-constants">values, variables, and constants</h2>

<p>Swift uses different keywords.</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="kd">import</span> <span class="kt">Darwin</span> <span class="c1">// use acos()</span>

  <span class="k">let</span> <span class="nv">Pi</span> <span class="o">=</span> <span class="nf">acos</span><span class="p">(</span><span class="mf">0.0</span><span class="p">)</span> <span class="o">*</span> <span class="mi">2</span><span class="p">,</span> <span class="nv">r</span><span class="p">:</span> <span class="kt">Double</span> <span class="o">=</span> <span class="mi">1</span>
  <span class="k">var</span> <span class="nv">s</span> <span class="o">=</span> <span class="kt">Pi</span> <span class="o">*</span> <span class="n">r</span> <span class="o">*</span> <span class="n">r</span>
</code></pre></div></div>

<p><img src="https://i.imgur.com/NLYkntC.png" alt="" /></p>

<p>btw. You can interctive with swift like ruby, just tap <code class="language-plaintext highlighter-rouge">swift</code> and enter.</p>

<blockquote>
  <p>You can provide a type annotation when you declare a constant or variable, to be clear about the kind of values the constant or variable can store.</p>
</blockquote>

<p>If you provide an initial value for a constant or variable at the point that it‚Äôs defined, Swift can almost always infer the type to be used for that constant or variable.</p>

<h3 id="int">Int</h3>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nf">print</span><span class="p">(</span><span class="kt">Int</span><span class="o">.</span><span class="n">max</span><span class="p">)</span>    <span class="c1">// 9223372036854775807</span>
  <span class="nf">print</span><span class="p">(</span><span class="kt">Int32</span><span class="o">.</span><span class="n">max</span><span class="p">)</span>  <span class="c1">// 2147483647</span>
  <span class="nf">print</span><span class="p">(</span><span class="kt">UInt</span><span class="o">.</span><span class="n">max</span><span class="p">)</span>   <span class="c1">// 18446744073709551615</span>
</code></pre></div></div>

<p>Digitals can be separated by <code class="language-plaintext highlighter-rouge">_</code>:</p>

<div class="language-swift highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nf">print</span><span class="p">(</span><span class="mi">2_333_444_555</span><span class="p">)</span> <span class="c1">// 2333444555</span>
</code></pre></div></div>
:ET