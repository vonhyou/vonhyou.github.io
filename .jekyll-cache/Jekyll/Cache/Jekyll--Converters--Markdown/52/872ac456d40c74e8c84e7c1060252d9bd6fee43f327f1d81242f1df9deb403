I"™<p>In previous assignment, I was asked to inplement a function which can pick the biggest number in a slice.</p>

<p>By learning on Coursera, I found a better way to do this.</p>

<!--more-->

<h2 id="ordinary-method">Ordinary Method</h2>

<p>When I started learning Programming in C++, the text book told me that the best way to pick the biggest number in an array is like this:</p>

<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="nf">getMax</span><span class="p">(</span><span class="kt">int</span> <span class="o">*</span><span class="n">a</span><span class="p">,</span> <span class="kt">int</span> <span class="n">len</span><span class="p">)</span> <span class="p">{</span>
  <span class="kt">int</span> <span class="n">flag</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="mi">0</span><span class="p">];</span>
  <span class="k">for</span> <span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">len</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">)</span>
    <span class="k">if</span> <span class="p">(</span><span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">flag</span><span class="p">)</span>
      <span class="n">flag</span> <span class="o">=</span> <span class="n">a</span><span class="p">[</span><span class="n">i</span><span class="p">];</span>
  <span class="k">return</span> <span class="n">flag</span>
<span class="p">}</span>
</code></pre></div></div>

<p>It‚Äôs simple, understandable and efficient. I cannot find a better algorithm to work as well as this (in C++).</p>

<h2 id="the-better-way-in-golang">The ‚ÄúBetter‚Äù Way in Golang</h2>

<p>At the beginning, I wrote a same function as usual in Go like this:</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">func</span> <span class="n">getMax</span><span class="p">(</span><span class="n">arr</span> <span class="p">[]</span><span class="kt">int</span><span class="p">,</span> <span class="n">n</span> <span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
  <span class="k">var</span> <span class="n">flag</span> <span class="kt">int</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="m">0</span><span class="p">]</span>
  <span class="k">for</span> <span class="n">i</span> <span class="o">:=</span> <span class="m">1</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">n</span><span class="p">;</span> <span class="n">i</span><span class="o">++</span> <span class="p">{</span>
    <span class="k">if</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&gt;</span> <span class="n">flag</span> <span class="p">{</span>
      <span class="n">flag</span> <span class="o">=</span> <span class="n">arr</span><span class="p">[</span><span class="n">i</span><span class="p">]</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">flag</span>
<span class="p">}</span>
</code></pre></div></div>

<p><del>(btw. Golang is really really ulgy and hard to write!)</del></p>

<p>Ok, I had completed the task perfectly. But I learned a new way to do the same thing elegantly. Furthermore, it uses some excellent features like ruby. Now let me show you the code.</p>

<div class="language-go highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">func</span> <span class="n">getMax</span><span class="p">(</span><span class="n">vals</span> <span class="o">...</span><span class="kt">int</span><span class="p">)</span> <span class="kt">int</span> <span class="p">{</span>
  <span class="n">flag</span> <span class="o">:=</span> <span class="n">MINN</span>
  <span class="k">for</span> <span class="n">_</span><span class="p">,</span> <span class="n">v</span> <span class="k">range</span> <span class="n">vals</span> <span class="p">{</span>
    <span class="k">if</span> <span class="n">v</span> <span class="o">&gt;</span> <span class="n">flag</span> <span class="p">{</span>
      <span class="n">flag</span> <span class="o">=</span> <span class="n">v</span>
    <span class="p">}</span>
  <span class="p">}</span>
  <span class="k">return</span> <span class="n">flag</span>
<span class="p">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">...</code> is a powerful sign and widely used in Go(and very very misleading). It can unfold slices and arrays.</p>

<p>After writing this post, I suddenly felt it was nothing. I can write this function more beautiful by using another languages.</p>

<p>Starting with C++ does really restrict my mind.Every time I use languages such as ruby, I felt like dancing with tight feet. It‚Äôs bad.</p>

<p>That‚Äôs all, thank you. I felt worse.</p>

:ET